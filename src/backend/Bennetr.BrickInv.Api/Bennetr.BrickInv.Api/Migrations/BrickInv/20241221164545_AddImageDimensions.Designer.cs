// <auto-generated />
using System;
using Bennetr.BrickInv.Api.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bennetr.BrickInv.Api.Migrations.BrickInv
{
    [DbContext(typeof(BrickInvContext))]
    [Migration("20241221164545_AddImageDimensions")]
    partial class AddImageDimensions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bennetr.BrickInv.Api.Models.Part", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ImageHeight")
                        .HasColumnType("int");

                    b.Property<string>("ImageUri")
                        .HasColumnType("longtext");

                    b.Property<int?>("ImageWidth")
                        .HasColumnType("int");

                    b.Property<string>("PartColor")
                        .HasColumnType("longtext");

                    b.Property<string>("PartId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PresentCount")
                        .HasColumnType("int");

                    b.Property<string>("SetId")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Bennetr.BrickInv.Api.Models.Set", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Finished")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ForSale")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ImageHeight")
                        .HasColumnType("int");

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ImageWidth")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationOrUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PresentParts")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("SetId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TotalParts")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("Bennetr.BrickInv.Api.Models.Part", b =>
                {
                    b.HasOne("Bennetr.BrickInv.Api.Models.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("Set");
                });
#pragma warning restore 612, 618
        }
    }
}
