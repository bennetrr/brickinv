name: Build container
description: Build and optionally push a container image

inputs:
  registry-server:
    description: Container registry server
    required: false
  registry-user:
    description: Container registry username
    required: false
  registry-password:
    description: Container registry password
    required: false
  name:
    description: Name of the container image
    required: false
  version:
    description: Version of the container image (with prefix)
    required: false
  file:
    description: Path to Dockerfile
    required: false
  context:
    description: Working / context directory for the build process (without trailing slash)
    required: false
    default: .
  push:
    description: Whether to push the container image to the registry
    required: true
  docker-platform:
    description: The platform to build the container image for, e.g. linux/amd64, linux/arm64
    default: linux/amd64
  dotnet-platform:
    description: The platform to build the dotnet package for, e.g. amd64, arm64
    default: amd64
  dotnet-ef-platform:
    description: The platform to build the database migrations for, e.g. linux-x64, linux-arm64
    default: amd64
  wemogy-npm-server:
    description: wemogy npm proxy server
    required: false
  wemogy-npm-user:
    description: wemogy npm proxy username
    required: false
  wemogy-npm-password:
    description: wemogy npm proxy password
    required: false

runs:
  using: composite
  steps:
    - name: Prepare
      run: |
        platform=${{ inputs.docker-platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

        registry_image=${{ inputs.registry-server }}/${{ inputs.name }}
        echo "REGISTRY_IMAGE=$registry_image" >> $GITHUB_ENV
        echo "FULL_IMAGE_NAME=${registry_image//\//-}" >> $GITHUB_ENV
        echo "BUILDX_OUTPUT=type=image,name=$registry_image,push-by-digest=true,name-canonical=true,push=true" >> $GITHUB_ENV
      shell: bash

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      if: ${{ inputs.push == 'true' }}
      with:
        images: ${{ env.REGISTRY_IMAGE }}
        flavor: |
          latest=false
        tags: |
          type=raw,value=${{ inputs.version }}
          type=sha

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to container registry
      uses: docker/login-action@v3
      if: ${{ inputs.push == 'true' }}
      with:
        registry: ${{ inputs.registry-server }}
        username: ${{ inputs.registry-user }}
        password: ${{ inputs.registry-password }}

    - name: Build container
      id: build
      uses: docker/build-push-action@v5
      with:
        labels: ${{ steps.meta.outputs.labels || '' }}
        outputs: ${{ inputs.push == 'true' && env.BUILDX_OUTPUT || '' }}
        file: ${{ inputs.file }}
        context: ${{ inputs.context }}
        platforms: ${{ inputs.docker-platform }}
        build-args: |
          WEMOGY_NPM_SERVER=${{ inputs.wemogy-npm-server }}
          WEMOGY_NPM_USER=${{ inputs.wemogy-npm-user }}
          WEMOGY_NPM_PASSWORD=${{ inputs.wemogy-npm-password }}
          DOTNET_TARGET_ARCH=${{ inputs.dotnet-platform }}
          DOTNET_EF_TARGET_ARCH=${{ inputs.dotnet-ef-platform }}

    - name: Export digest
      if: ${{ inputs.push == 'true' }}
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
      shell: bash

    - name: Upload digest
      if: ${{ inputs.push == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.FULL_IMAGE_NAME }}-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1
